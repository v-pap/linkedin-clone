package servlets;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import dao.AdministratorDAO;
import dao.AdministratorDAOImpl;
import dao.ProfessionalDAO;
import dao.ProfessionalDAOImpl;
import model.Administrator;
import model.Professional;

/**
 * Servlet implementation class UserServlet
 */
@WebServlet(urlPatterns = {"/UserSettings"})
public class UserSettings extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public UserSettings() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{
		String requestURI = request.getRequestURI();
		
		HttpSession session = request.getSession(true);
	
		Professional prof = (Professional) session.getAttribute("prof");
        if (prof != null)
        {
        	if(requestURI.endsWith("logout"))
    		{
    			if(session != null)
    			{
    			    session.removeAttribute("prof");
    			    session.invalidate();
    			}
    			response.sendRedirect("/LinkedInClone/UserServlet");
    		}
    		else if(requestURI.endsWith("settings"))
    		{
    			request.setAttribute("e_error_message","");
    			request.setAttribute("p_error_message","");
    			RequestDispatcher rd = getServletContext().getRequestDispatcher("/user/settings.jsp");  
                rd.forward(request, response);
    		}
    		else
    		{
    			RequestDispatcher rd = getServletContext().getRequestDispatcher("/user/home.jsp");  
                rd.forward(request, response);
    		}
        }
        else
        {
        	request.setAttribute("error_message","");
        	RequestDispatcher rd = getServletContext().getRequestDispatcher("/index.jsp");  
            rd.forward(request, response);
        }
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
	{
		String requestURI = request.getRequestURI();
		
		if(requestURI.endsWith("login"))
		{
			Professional prof = login(request, response);
			if (prof != null)
	        {
	             HttpSession session = request.getSession(true);       
	             session.setAttribute("prof",prof);
	             RequestDispatcher rd = getServletContext().getRequestDispatcher("/user/home.jsp");  
	             rd.forward(request, response);
	        }
	        else
	        {
	        	//TO DO ERROR PAGE
	        	RequestDispatcher rd = getServletContext().getRequestDispatcher("/index.jsp");
	        	request.setAttribute("error_message", "Wrong email or password");
	            rd.forward(request, response);
	        }
		}
		else
		{
			HttpSession session = request.getSession(true);
			
			Professional prof = (Professional) session.getAttribute("prof");
			if(prof != null)
			{
				if(requestURI.endsWith("settings/email"))
				{
					Professional result = changeEmail(request, response);
					if(result == null)
					{
						request.setAttribute("e_error_message","The email is already in use");
			        	RequestDispatcher rd = getServletContext().getRequestDispatcher("/user/settings.jsp");  
			            rd.forward(request, response);
					}
					else
					{
						session.setAttribute("prof",result);
						request.setAttribute("e_error_message","werks");
			        	RequestDispatcher rd = getServletContext().getRequestDispatcher("/user/settings.jsp");  
			            rd.forward(request, response);
					}
				}
				else if(requestURI.endsWith("settings/password"))
				{
					
				}
			}
			else
			{
				request.setAttribute("error_message","");
	        	RequestDispatcher rd = getServletContext().getRequestDispatcher("/index.jsp");  
	            rd.forward(request, response);
			}
		}
	}
	
	private Professional login(HttpServletRequest request,
            HttpServletResponse response)
	{
	 
        String email = request.getParameter("email");
        String password = request.getParameter("password");
        ProfessionalDAO dao = new ProfessionalDAOImpl();
        Professional prof = dao.login(email,password);
        return prof;
    }
	
	private Professional changeEmail(HttpServletRequest request,
            HttpServletResponse response)
	{
		HttpSession session = request.getSession(true);
		Professional prof = (Professional) session.getAttribute("prof");
        String newEmail = request.getParameter("e_email");
        String confirmPassword = request.getParameter("e_password");
        if(!prof.getPassword().equals(confirmPassword)) return null;
        ProfessionalDAO dao = new ProfessionalDAOImpl();
        prof = dao.changeEmail(newEmail, prof);
        return prof;
    }
	
	private Professional changePassword(HttpServletRequest request,
            HttpServletResponse response)
	{
	 
        String email = request.getParameter("email");
        String password = request.getParameter("password");
        ProfessionalDAO dao = new ProfessionalDAOImpl();
        Professional prof = dao.login(email,password);
        return prof;
    }

}
