package servlets;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import dao.ProfessionalDAO;
import dao.ProfessionalDAOImpl;
import model.Professional;
import model.Skill;

/**
 * Servlet implementation class UserNetwork
 */
@WebServlet(urlPatterns = {"/UserNetwork", "/UserNetwork/search"})
public class UserNetwork extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public UserNetwork() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession(true);
		
		Professional prof = (Professional) session.getAttribute("prof");
		if (prof != null)
        {
        	List<Professional> profs_connected = getConnectedProfessionals(request, response);
            request.setAttribute("profs_connected", profs_connected);
			RequestDispatcher rd = getServletContext().getRequestDispatcher("/user/network.jsp");  
            rd.forward(request, response);
        }
        else
        {
			response.sendRedirect("/LinkedInClone/UserServlet");
        }
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession(true);
		//String requestURI = request.getRequestURI();
		Professional prof = (Professional) session.getAttribute("prof");

		if (prof != null)
        {
			List<Professional> profs_search = searchProfessionals(request, response);
            request.setAttribute("profs_search", profs_search);
			RequestDispatcher rd = getServletContext().getRequestDispatcher("/user/network.jsp");  
            rd.forward(request, response);
        }
	}
	
	private List<Professional> getConnectedProfessionals(HttpServletRequest request,
            HttpServletResponse response)
	{
		HttpSession session = request.getSession(true);
		Professional prof = (Professional) session.getAttribute("prof");
        ProfessionalDAO dao = new ProfessionalDAOImpl();
		List<Professional> profs = dao.list_connected(prof);
        return profs;
    }
	
	private List<Professional> searchProfessionals(HttpServletRequest request,
            HttpServletResponse response)
	{
		HttpSession session = request.getSession(true);
		Professional prof = (Professional) session.getAttribute("prof");
        ProfessionalDAO dao = new ProfessionalDAOImpl();
        String searchName = request.getParameter("search");
		List<Professional> profs = dao.list_search("%" + searchName.trim() + "%");
		profs.remove(profs.get(prof.getId()));
        return profs;
    }

}
